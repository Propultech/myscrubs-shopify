{% schema %}
{
  "name": "Calculadora de envío",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Título",
      "default": "Calcula el costo de envío"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtítulo",
      "default": "Ingresa tu región y comuna para calcular el costo de envío"
    }
  ],
  "presets": [
    {
      "name": "Calculadora de envío",
      "category": "Envío"
    }
  ]
}
{% endschema %}

<div class="shipping-calculator">
  <div class="page-width">
    <div class="shipping-calculator__container">
      <h2 class="shipping-calculator__title">{{ section.settings.title }}</h2>
      <p class="shipping-calculator__subtitle">{{ section.settings.subtitle }}</p>

      <div class="shipping-calculator__form">
        <div class="field">
          <label class="field__label" for="region">Región</label>
          <select class="field__input" id="region" name="region">
            <option value="">Selecciona una región</option>
          </select>
        </div>

        <div class="field">
          <label class="field__label" for="commune">Comuna</label>
          <select class="field__input" id="commune" name="commune" disabled>
            <option value="">Selecciona una comuna</option>
          </select>
        </div>

        <button type="button" class="button button--primary" id="calculate-shipping">Calcular envío</button>
      </div>

      <div class="shipping-calculator__result" id="shipping-result" style="display: none;">
        <div class="shipping-calculator__result-content">
          <h3>Costo de envío</h3>
          <div id="shipping-details"></div>
          <div class="shipping-calculator__actions">
            <a href="/cart" class="button button--secondary">Ver carrito</a>
            <a href="/checkout" class="button button--primary">Ir al checkout</a>
          </div>
        </div>
      </div>

      <div class="shipping-calculator__error" id="shipping-error" style="display: none;">
        <div class="shipping-calculator__error-content">
          <h3>No pudimos calcular el envío en este momento</h3>
          <p>
            Te recomendamos avanzar al checkout donde podrás ver todas las opciones de envío disponibles para tu pedido.
          </p>
          <div class="shipping-calculator__actions">
            <a href="/cart" class="button button--secondary">Ver carrito</a>
            <a href="/checkout" class="button button--primary">Ir al checkout</a>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const regionSelect = document.getElementById('region');
    const communeSelect = document.getElementById('commune');
    const calculateButton = document.getElementById('calculate-shipping');
    const shippingResult = document.getElementById('shipping-result');
    const shippingError = document.getElementById('shipping-error');
    const shippingDetails = document.getElementById('shipping-details');

    // Mapeo de regiones a comunas y códigos
    const regionData = {
      RM: {
        name: 'Metropolitana de Santiago',
        communes: [
          'Alhué',
          'Buin',
          'Calera de Tango',
          'Cerrillos',
          'Cerro Navia',
          'Colina',
          'Conchalí',
          'Curacaví',
          'El Bosque',
          'El Monte',
          'Estación Central',
          'Huechuraba',
          'Independencia',
          'Isla de Maipo',
          'La Cisterna',
          'La Florida',
          'La Granja',
          'La Pintana',
          'La Reina',
          'Lampa',
          'Las Condes',
          'Lo Barnechea',
          'Lo Espejo',
          'Lo Prado',
          'Macul',
          'Maipú',
          'María Pinto',
          'Melipilla',
          'Ñuñoa',
          'Padre Hurtado',
          'Paine',
          'Pedro Aguirre Cerda',
          'Peñaflor',
          'Peñalolén',
          'Pirque',
          'Providencia',
          'Pudahuel',
          'Puente Alto',
          'Quilicura',
          'Quinta Normal',
          'Recoleta',
          'Renca',
          'San Bernardo',
          'San Joaquín',
          'San José de Maipo',
          'San Miguel',
          'San Pedro',
          'San Ramón',
          'Santiago',
          'Talagante',
          'Tiltil',
          'Vitacura',
        ],
      },
      VS: {
        name: 'Valparaíso',
        communes: ['Valparaíso', 'Viña del Mar', 'Quilpué', 'Villa Alemana', 'San Antonio'],
      },
      BI: {
        name: 'Biobío',
        communes: ['Concepción', 'Talcahuano', 'Chillán', 'Los Ángeles'],
      },
      AR: {
        name: 'La Araucanía',
        communes: ['Temuco', 'Villarrica', 'Pucón'],
      },
      LL: {
        name: 'Los Lagos',
        communes: ['Puerto Montt', 'Osorno', 'Castro'],
      },
    };

    // Actualizar el selector de regiones
    regionSelect.innerHTML = '<option value="">Selecciona una región</option>';

    Object.entries(regionData).forEach(([code, data]) => {
      const option = document.createElement('option');
      option.value = code;
      option.textContent = data.name;
      regionSelect.appendChild(option);
    });

    // Actualizar comunas cuando se selecciona una región
    regionSelect.addEventListener('change', function () {
      const selectedRegion = this.value;
      communeSelect.innerHTML = '<option value="">Selecciona una comuna</option>';

      if (selectedRegion && regionData[selectedRegion]) {
        communeSelect.disabled = false;
        regionData[selectedRegion].communes.forEach((commune) => {
          const option = document.createElement('option');
          option.value = commune;
          option.textContent = commune;
          communeSelect.appendChild(option);
        });
      } else {
        communeSelect.disabled = true;
      }
    });

    // Calcular envío
    calculateButton.addEventListener('click', async function () {
      const region = regionSelect.value;
      const commune = communeSelect.value;

      if (!region || !commune) {
        alert('Por favor selecciona una región y comuna');
        return;
      }

      try {
        // Obtener el carrito actual
        const cartResponse = await fetch('/cart.js');
        const cart = await cartResponse.json();

        if (!cart.items || cart.items.length === 0) {
          alert('Por favor agrega productos al carrito antes de calcular el envío');
          return;
        }

        // Preparar la dirección de envío
        const shippingAddress = {
          address1: 'Dirección de ejemplo',
          city: commune,
          province: region,
          country: 'Chile',
          zip: '000000',
          phone: '912345678',
        };

        // Preparar el cálculo de tarifas de envío
        const prepareResponse = await fetch('/cart/prepare_shipping_rates.json', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            Accept: 'application/json',
          },
          body: JSON.stringify({
            shipping_address: shippingAddress,
          }),
        });

        if (!prepareResponse.ok) {
          const errorData = await prepareResponse.json();
          throw new Error(errorData.message || 'Error al preparar las tarifas de envío');
        }

        // Esperar un momento para que Shopify calcule las tarifas
        await new Promise((resolve) => setTimeout(resolve, 1000));

        // Obtener las tarifas de envío
        const ratesResponse = await fetch('/cart/async_shipping_rates.json', {
          method: 'GET',
          headers: {
            Accept: 'application/json',
          },
        });

        if (!ratesResponse.ok) {
          const errorData = await ratesResponse.json();
          throw new Error(errorData.message || 'Error al obtener las tarifas de envío');
        }

        const ratesData = await ratesResponse.json();

        // Verificar que la respuesta tenga la estructura esperada
        if (!ratesData || !ratesData.shipping_rates) {
          throw new Error('NO_SHIPPING_RATES');
        }

        if (ratesData.shipping_rates.length > 0) {
          // Mostrar todas las tarifas disponibles
          shippingDetails.innerHTML = ratesData.shipping_rates
            .map(
              (rate) => `
            <div class="shipping-rate">
              <div class="shipping-rate__name">${rate.name}</div>
              <div class="shipping-rate__price">$${parseFloat(rate.price).toLocaleString('es-CL')}</div>
            </div>
          `
            )
            .join('');

          shippingResult.style.display = 'block';
          shippingError.style.display = 'none';
        } else {
          throw new Error('NO_SHIPPING_RATES');
        }
      } catch (error) {
        console.error('Error:', error);

        if (error.message === 'NO_SHIPPING_RATES') {
          shippingResult.style.display = 'none';
          shippingError.style.display = 'block';
        } else {
          alert(error.message || 'Hubo un error al calcular el costo de envío. Por favor intenta nuevamente.');
        }
      }
    });
  });
</script>

<style>
  .shipping-calculator {
    padding: 2rem 0;
  }

  .shipping-calculator__container {
    max-width: 600px;
    margin: 0 auto;
    padding: 2rem;
    background: #f8f8f8;
    border-radius: 8px;
  }

  .shipping-calculator__title {
    margin: 0 0 1rem;
    font-size: 1.5rem;
    text-align: center;
  }

  .shipping-calculator__subtitle {
    margin: 0 0 2rem;
    text-align: center;
    color: #666;
  }

  .shipping-calculator__form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .field {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .field__label {
    font-weight: 500;
  }

  .field__input {
    padding: 0.75rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 1rem;
  }

  .button {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 4px;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.2s;
    text-decoration: none;
    display: inline-block;
    text-align: center;
  }

  .button--primary {
    background-color: #000;
    color: #fff;
  }

  .button--primary:hover {
    background-color: #333;
  }

  .button--secondary {
    background-color: #f8f8f8;
    color: #000;
    border: 1px solid #ddd;
  }

  .button--secondary:hover {
    background-color: #eee;
  }

  .shipping-calculator__result,
  .shipping-calculator__error {
    margin-top: 2rem;
    padding: 1.5rem;
    background: #fff;
    border-radius: 4px;
    text-align: center;
  }

  .shipping-calculator__result h3,
  .shipping-calculator__error h3 {
    margin: 0 0 1rem;
    font-size: 1.2rem;
  }

  .shipping-calculator__error p {
    margin: 0 0 1.5rem;
    color: #666;
  }

  .shipping-rate {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
    border-bottom: 1px solid #eee;
  }

  .shipping-rate:last-child {
    border-bottom: none;
  }

  .shipping-rate__name {
    font-weight: 500;
  }

  .shipping-rate__price {
    font-weight: 600;
  }

  .shipping-calculator__actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin-top: 1.5rem;
  }
</style>
