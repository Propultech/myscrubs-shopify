<section id="complementary-products-section" class="complementary-products">
  <div class="complementary-products__container">
    <h2 class="complementary-products__title" style="margin:0px;">
      {{ section.settings.title | default: 'Completa tu conjunto' }}
    </h2>

    {% assign complementary_products = product.metafields.shopify--discovery--product_recommendation.complementary_products.value %}

    <div class="complementary-products__grid">
      {% for recommended_product in complementary_products %}
        {% assign color_option = recommended_product.options_with_values | where: "name", "Color" | first %}
        {% assign size_option = recommended_product.options_with_values | where_exp: "opt", "opt.name != 'Color'" | first %}

        <article class="complementary-products__item">
          <!-- Columna 1: Imagen -->
          <div class="complementary-products__column complementary-products__image-wrapper">
            <a href="{{ recommended_product.url }}">
              <img
                src="{{ recommended_product.featured_image | image_url: width: 500 }}"
                alt="{{ recommended_product.featured_image.alt | escape }}"
                loading="lazy"
              >
            </a>
          </div>

          <div class="complementary-products__column complementary-products__info">
            <span class="complementary-products__vendor">
              {{ recommended_product.vendor }}
            </span>
            <h3 class="complementary-products__product-title" style="font-size: {{ section.settings.title_font_size }}px">
              <a href="{{ recommended_product.url }}">
                {{ recommended_product.title }}
              </a>
            </h3>
            <p class="complementary-products__price" style="font-size: {{ section.settings.price_font_size }}px">
              {{ recommended_product.price | money }}
            </p>
            {% if color_option %}
              <div class="complementary-products__mobile-colors">
                <p class="complementary-products__colors-count">
                  {{ color_option.values.size }} colores disponibles
                </p>
                <div class="complementary-products__swatches">
                  {% for value in color_option.values %}
                    <input
                      type="radio"
                      name="option_color_{{ forloop.parentloop.index0 }}"
                      id="option_{{ recommended_product.id }}_color_{{ forloop.index }}"
                      value="{{ value }}"
                      {% if forloop.first %}checked{% endif %}
                      class="visually-hidden"
                    >
                    <label
                      for="option_{{ recommended_product.id }}_color_{{ forloop.index }}"
                      class="complementary-products__swatch"
                      style="background-color: {{ value | handleize }};"
                    ></label>
                  {% endfor %}
                </div>
              </div>
            {% endif %}
          </div>

          <div class="complementary-products__column complementary-products__variants complementary-products__desktop-variants">
            {% for option in recommended_product.options_with_values %}
              <div class="complementary-products__options">
                <label>{{ option.name }}:</label>
                <div class="{% if option.name == 'Color' %}complementary-products__swatches{% else %}complementary-products__sizes{% endif %}">
                  {% for value in option.values %}
                    <input
                      type="radio"
                      name="option{{ forloop.parentloop.index0 }}"
                      id="option_{{ recommended_product.id }}_{{ option.name | handleize }}_{{ forloop.index }}"
                      value="{{ value }}"
                      {% if forloop.first %}checked{% endif %}
                    >
                    <label
                      for="option_{{ recommended_product.id }}_{{ option.name | handleize }}_{{ forloop.index }}"
                      class="{% if option.name == 'Color' %}complementary-products__swatch{% else %}label complementary-products__size-label{% endif %}"
                      {% if option.name == 'Color' %}style="background-color: {{ value | handleize }};"{% endif %}
                    >
                      {% unless option.name == 'Color' %}{{ value }}{% endunless %}
                    </label>
                  {% endfor %}
                </div>
              </div>
            {% endfor %}
          </div>

          <div class="complementary-products__column complementary-products__cta">
            <form method="post" action="/cart/add" class="complementary-products__form" data-product-id="{{ recommended_product.id }}">
              <input type="hidden" name="id" value="{{ recommended_product.variants.first.id }}" class="variant-id-input">

              <!-- Bloque exclusivo para mobile: selección de tallas (si existe) -->
              <div class="complementary-products__mobile-sizes">
                {% if size_option %}
                  <div class="complementary-products__options sizes-only">
                    <label>{{ size_option.name }}:</label>
                    <div class="complementary-products__sizes">
                      {% for value in size_option.values %}
                        <input
                          type="radio"
                          name="option_size_{{ forloop.parentloop.index0 }}"
                          id="option_{{ recommended_product.id }}_size_{{ forloop.index }}"
                          value="{{ value }}"
                          {% if forloop.first %}checked{% endif %}
                        >
                        <label
                          for="option_{{ recommended_product.id }}_size_{{ forloop.index }}"
                          class="label complementary-products__size-label"
                        >
                          {{ value }}
                        </label>
                      {% endfor %}
                    </div>
                  </div>
                {% endif %}
              </div>

              <script type="application/json" class="variant-data">
                {{ recommended_product.variants | json }}
              </script>

              <button type="submit" class="complementary-products__add-to-cart">
                Añadir al carrito
              </button>
            </form>
          </div>
        </article>
      {% endfor %}
    </div>
  </div>

   <script>
  document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('.complementary-products__form').forEach(form => {
      const variantInput = form.querySelector('.variant-id-input');
      const variantData = JSON.parse(form.querySelector('.variant-data').textContent);
      const radios = form.querySelectorAll('input[type=radio]');

      function updateVariantId() {
        const selectedOptions = [];
        // Se consideran solo los radios que sean visibles (offsetParent distinto de null)
        Array.from(form.querySelectorAll('input[type=radio]')).forEach(input => {
          if (input.offsetParent !== null && input.checked) {
            selectedOptions.push(input.value);
          }
        });

        const matchedVariant = variantData.find(variant =>
          variant.options.every((opt, index) => opt === selectedOptions[index])
        );

        if (matchedVariant) {
          variantInput.value = matchedVariant.id;
        }
      }

      radios.forEach(input => {
        input.addEventListener('change', updateVariantId);
      });

      updateVariantId();

      form.addEventListener('submit', function (e) {
        e.preventDefault();
        const variantId = variantInput.value;

        fetch('/cart/add.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          },
          body: JSON.stringify({ id: variantId, quantity: 1 })
        })
        .then(response => {
          if (!response.ok) throw new Error('No se pudo agregar al carrito.');
          return fetch('/cart');
        })
        .then(response => response.text())
        .then(cartHtml => {
          const parser = new DOMParser();
          const newDocument = parser.parseFromString(cartHtml, 'text/html');
          const newDrawer = newDocument.querySelector('cart-drawer');
          const existingDrawer = document.querySelector('cart-drawer');

          if (newDrawer && existingDrawer) {
            existingDrawer.innerHTML = newDrawer.innerHTML;
            existingDrawer.classList.add('is-open', 'animate', 'active');
            document.body.classList.add('overflow-hidden');
            const focusElement = existingDrawer.querySelector('.drawer__close') || existingDrawer;
            const trapFocus = window.trapFocus || function () {};
            trapFocus(existingDrawer, focusElement);
          }
        })
        .catch(error => {
          console.error('Error al agregar al carrito:', error);
          alert('Error al agregar al carrito.');
        });
      });
    });
  });
</script>



  <style>
    .complementary-products__container {
      background: #F8F8F8;
    }
    .complementary-products__grid {
      display: flex;
      flex-direction: column;
      gap: 2rem;
    }
    .complementary-products__item {
      display: grid;
      gap: 2rem;
      padding: 2rem;
      border: 1px solid #eee;
      border-radius: 12px;
      box-sizing: border-box;
    }
    .complementary-products__image-wrapper {
      width: 50%;
      display: flex;
      justify-content: center;
    }
    .complementary-products__image-wrapper img {
      max-width: 100%;
      border-radius: 8px;
      display: block;
    }
    .complementary-products__info {
      display: flex;
      flex-direction: column;
      gap: 0.4rem;
    }
    .complementary-products__vendor {
      font-size: 0.75rem;
      color: #555;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    .complementary-products__product-title a {
      text-decoration: none;
      color: #121212;
    }
    .complementary-products__price {
      font-weight: bold;
      color: #333;
    }
    .complementary-products__swatches,
    .complementary-products__sizes {
      display: flex;
      gap: 0.5rem;
      flex-wrap: wrap;
    }
    .complementary-products__swatch {
      width: 22px;
      height: 22px;
      border-radius: 50%;
      border: 1px solid #ccc;
      cursor: pointer;
    }
    .complementary-products__size-label {
      padding: 0.35rem 0.75rem;
      border: 1px solid #ccc;
      font-size: 0.85rem;
      font-weight: 500;
      background-color: #fff;
      cursor: pointer;
      transition: all 0.2s ease;
    }
    .complementary-products__cta {
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .complementary-products__add-to-cart {
      background-color: #005E95;
      color: #fff;
      padding: 0.75rem 2rem;
      border: none;
      border-radius: 2px;
      cursor: pointer;
      font-weight: bold;
      font-size: 0.95rem;
      text-transform: uppercase;
      transition: background 0.2s ease;
    }
    .complementary-products__add-to-cart:hover {
      background-color: #004a78;
    }
    .complementary-products__options input[type="radio"] {
      /* La clase visually-hidden evita mostrar el input pero lo deja accesible */
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0,0,0,0);
      white-space: nowrap;
      border: 0;
    }
    .complementary-products__options input[type="radio"]:checked + label {
      border: 2px solid #005E95;
    }


    @media screen and (min-width: 1024px) {
      .complementary-products__item {
        grid-template-columns: 15% 15% 35% 35%;
      }
      .complementary-products__desktop-variants {
        display: block;
      }
      .complementary-products__mobile-sizes,
      .complementary-products__mobile-colors {
        display: none;
      }
      .complementary-products__container {
        padding-left: {{ section.settings.side_padding_desktop }}%;
        padding-right: {{ section.settings.side_padding_desktop }}%;
      }
    }

    @media screen and (max-width: 1023px) {
      .complementary-products__item {
        grid-template-columns: 30% 40% 30%;
        gap: 1rem;
        padding: 1rem;
      }
      .complementary-products__desktop-variants {
        display: none;
      }
    }
  </style>

  {% schema %}
  {
    "name": "Productos complementarios",
    "settings": [
      {
        "type": "text",
        "id": "title",
        "label": "Título de la sección",
        "default": "Completa tu conjunto"
      },
      {
        "type": "range",
        "id": "title_font_size",
        "label": "Tamaño de fuente del título del producto (px)",
        "min": 10,
        "max": 32,
        "step": 1,
        "default": 18
      },
      {
        "type": "range",
        "id": "price_font_size",
        "label": "Tamaño de fuente del precio (px)",
        "min": 10,
        "max": 32,
        "step": 1,
        "default": 16
      },
      {
        "type": "range",
        "id": "side_padding_desktop",
        "label": "Padding lateral en desktop (%)",
        "min": 1,
        "max": 30,
        "step": 1,
        "default": 5
      }
    ],
    "blocks": [],
    "presets": [
      {
        "name": "Productos complementarios"
      }
    ]
  }
  {% endschema %}
</section>
